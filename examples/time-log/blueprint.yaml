apiVersion: cr.kanister.io/v1alpha1
kind: Blueprint
metadata:
  name: time-log-bp
  namespace: kanister
actions:
  backup:
    type: Deployment
    outputArtifacts:
      timeLog:
        keyValue:
          path: 's3://{{ .Profile.Location.S3Compliant.Bucket }}/time-log/{{ toDate "2006-01-02T15:04:05.999999999Z07:00" .Time  | date "2006-01-02" }}.tgz'
    phases:
    - func: BackupData
      name: backupToS3
      args:
        namespace: "{{ .Deployment.Namespace }}"
        pod: "{{ index .Deployment.Pods 0 }}"
        container: test-container
        includePath: /var/log
        backupArtifact: "{{ .ArtifactsOut.timeLog.KeyValue.path }}"
  restore:
    type: Deployment
    inputArtifactNames:
    - timeLog
    phases:
    - func: ScaleWorkload
      name: shutdownPod
      args:
        namespace: "{{ .Deployment.Namespace }}"
        name: "{{ .Deployment.Name }}"
        kind: Deployment
        replicas: 0
    - func: RestoreData
      name: restoreFromS3
      args:
        namespace: "{{ .Deployment.Namespace }}"
        pod: "{{ index .Deployment.Pods 0 }}"
        image: kanisterio/kanister-tools:0.0.1
        backupArtifact: "{{ .ArtifactsIn.timeLog.KeyValue.path }}"
        restorePath: /var/log
    - func: ScaleWorkload
      name: bringupPod
      args:
        namespace: "{{ .Deployment.Namespace }}"
        name: "{{ .Deployment.Name }}"
        kind: Deployment
        replicas: 1
  delete:
    type: Deployment
    inputArtifactNames:
    - timeLog
    phases:
    - func: KubeExec
      name: deleteFromS3
      args:
        namespace: "{{ .Deployment.Namespace }}"
        pod: "{{ index .Deployment.Pods 0 }}"
        container: test-container
        command:
          - bash
          - -c
          - |
            AWS_ACCESS_KEY_ID={{ .Profile.Credential.KeyPair.ID | toString }} \
            AWS_SECRET_ACCESS_KEY={{ .Profile.Credential.KeyPair.Secret | toString }} \
            aws s3 rm {{ .ArtifactsIn.timeLog.KeyValue.path | quote }}
